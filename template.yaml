# CEDA Backstage GitHub Public Python Library Template
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template

# Basic Template Information
metadata:
  name: ceda-github-python-library
  title: CEDA GitHub Python Library
  description: Create a Python library or client in the CEDADEV organisation

# Templated Information
spec:
  owner: group:default/developers
  type: library
  parameters:
    - title: Basic Library Information
      required:
        - name
        - slug
        - description
        - visibility
      properties:
        name:
          title: Software name
          type: string
          description: The name of the component in this software catalogue (i.e. "CEDA ServiceX Client).
          ui:autofocus: true
          ui:options:
            rows: 1
        slug:
          title: Repository Slug (Name)
          type: string
          description: The slug for the repository, (i.e. "ceda-servicex-client")
          ui:options:
            rows: 1
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        description:
          title: Description
          type: string
          description: A brief description of the library.
          ui:options:
            rows: 5
        visibility:
          title: Visibility
          type: string
          description: The visibility of the repository
          default: public
          enum:
            - public
            - private
          enumNames:
            - Public (default)
            - Private (visible only to CEDADEV organisational members on github)

  # Steps undertaken by backstage after completion of the template form
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./github_content
        targetPath: ./ghub
        values:
          name: ${{ parameters.name }}
          author: ${{ user.entity }}
          description: ${{ parameters.description }}
          slug: ${{ parameters.slug }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        sourcePath: ./ghub
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}
        allowedHosts:
          - github.com
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=cedadev&repo=${{ parameters.slug }}
        repoVisibility: ${{ parameters.visibility }}
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
